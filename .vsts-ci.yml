jobs:
- job: Windows
  
  pool:
    vmImage: windows-2019

  variables:
    Solution: CSharp\Uno\Uno.RayTraceBenchmark.sln
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget

  steps:
  - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries') }}:
    - template: .vsts-ci.canaries.yml
      parameters:
        Solution: $(Solution)
        ArtifactName: Canaries

  - task: GitVersion@5
    inputs:
      updateAssemblyInfo: false   

  - task: MSBuild@1
    inputs:
      solution: $(Solution)
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r /p:Configuration=Release "/p:InformationalVersion=$(GitVersion.InformationalVersion)" /detailedsummary
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false
  
  - task: PublishBuildArtifacts@1
    displayName: Publish Package Artifacts
    inputs:
      pathToPublish: 'CSharp\Uno\RayTraceBenchmark\RayTraceBenchmark.Wasm\bin\Release\netstandard2.0\dist'
      artifactType: container
      artifactName: RayTraceBenchmark-Wasm

- job: Linux
  container: unoplatform/wasm-build:2.0

  pool:
    vmImage: 'ubuntu-18.04'

  variables:
    NUGET_PACKAGES: $(Build.SourcesDirectory)/.nuget
    EMSCRIPTEN_VERSION: 1.39.18

  steps:
  - bash: |
      cd ~
      git clone --branch $(EMSCRIPTEN_VERSION) https://github.com/emscripten-core/emsdk
      cd emsdk
      ./emsdk install $(EMSCRIPTEN_VERSION)
      ./emsdk activate $(EMSCRIPTEN_VERSION)

    displayName: 'Setup Emscripten'

  - task: UseDotNet@2
    inputs:
      packageType: runtime
      version: 2.2.x
      installationPath: /usr/share/dotnet

  - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries') }}:
    - template: .vsts-ci.canaries.yml
      parameters:
        Solution: $(Build.SourcesDirectory)/CSharp/Uno/RayTraceBenchmark/RayTraceBenchmark.Wasm
        ArtifactName: Canary-AOT

  - task: GitVersion@5
    inputs:
      updateAssemblyInfo: false

  - task: UseDotNet@2
    inputs:
      packageType: sdk
      version: 3.1.201
      installationPath: /usr/share/dotnet

  - bash: |
      source ~/emsdk/emsdk_env.sh
      msbuild /r /p:Configuration=Release "/p:InformationalVersion=$(GitVersion.InformationalVersion)" "$(Build.SourcesDirectory)/CSharp/Uno/RayTraceBenchmark/RayTraceBenchmark.Wasm/RayTraceBenchmark.Wasm.csproj"

  - task: CopyFiles@2
    displayName: 'Publish Wasm Binaries'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/CSharp/Uno/RayTraceBenchmark/RayTraceBenchmark.Wasm/bin/Release/netstandard2.0/dist'
      Contents: '**/*.*'
      TargetFolder: $(Build.ArtifactStagingDirectory)/wasm
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: aot-drop
      ArtifactType: Container